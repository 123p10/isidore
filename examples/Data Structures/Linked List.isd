extern double printd(double d);
class Node = {
	int val;
	Node next;
};

class Array = {
	int size;
	Node first;
}
int init(Array arr){
	arr.size = 0;
	return 0;
}

int input(Node curr, Node insert, int size){
	if(size == 1){
		curr.next = insert;
		return 0;
	}
	return input(curr.next,insert,size-1);
}

int add(Array arr,Node n){
	if(arr.size == 0){
		arr.first = n;
		arr.size = 1;
		return 0;
	}
	input(arr.first,n,arr.size);
	arr.size += 1;
	return 0;
}
//This does not work as we need a GC
Node push_back(Array arr, int i){
	Node t;
	t.val = i;
	add(arr,t);
	return t;
}
Node get_h(Node curr, int c){
	if(c == 0){
		return curr;
	}
	return get_h(curr.next,c-1);
}

Node get(Array arr, int index){
	return get_h(arr.first,index);
}

int get_val(Array arr,int index){
	Node tmp;
	tmp = get(arr,index);
	return tmp.val;
}


int printn(Node curr, int c){
	if(c == 0){
		return 0;
	}
	printd(curr.val);
	printn(curr.next,c-1);
	return 0;
}

int print(Array arr){
	printn(arr.first,arr.size);
	return 0;
}


double main(){
	Array arr;
	init(arr);
	Node a;
	Node b;
	Node c;
	a.val = 1;
	b.val = 3;
	c.val = 2;
	add(arr,a);
	add(arr,b);
	add(arr,c);
	print(arr);
	return get_val(arr,1);
}
main();
